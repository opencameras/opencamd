// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LogoutUserReader is a Reader for the LogoutUser structure.
type LogoutUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogoutUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogoutUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLogoutUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLogoutUserOK creates a LogoutUserOK with default headers values
func NewLogoutUserOK() *LogoutUserOK {
	return &LogoutUserOK{}
}

/* LogoutUserOK describes a response with status code 200, with default header values.

successful operation
*/
type LogoutUserOK struct {
}

func (o *LogoutUserOK) Error() string {
	return fmt.Sprintf("[GET /user/logout][%d] logoutUserOK ", 200)
}

func (o *LogoutUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogoutUserUnauthorized creates a LogoutUserUnauthorized with default headers values
func NewLogoutUserUnauthorized() *LogoutUserUnauthorized {
	return &LogoutUserUnauthorized{}
}

/* LogoutUserUnauthorized describes a response with status code 401, with default header values.

Access token is missing or invalid
*/
type LogoutUserUnauthorized struct {
}

func (o *LogoutUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/logout][%d] logoutUserUnauthorized ", 401)
}

func (o *LogoutUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
