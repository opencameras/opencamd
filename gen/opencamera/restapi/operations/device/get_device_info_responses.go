// Code generated by go-swagger; DO NOT EDIT.

package device

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/opencameras/opencamd/gen/opencamera/models"
)

// GetDeviceInfoOKCode is the HTTP code returned for type GetDeviceInfoOK
const GetDeviceInfoOKCode int = 200

/*GetDeviceInfoOK Success

swagger:response getDeviceInfoOK
*/
type GetDeviceInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.DeviceInfo `json:"body,omitempty"`
}

// NewGetDeviceInfoOK creates GetDeviceInfoOK with default headers values
func NewGetDeviceInfoOK() *GetDeviceInfoOK {

	return &GetDeviceInfoOK{}
}

// WithPayload adds the payload to the get device info o k response
func (o *GetDeviceInfoOK) WithPayload(payload *models.DeviceInfo) *GetDeviceInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get device info o k response
func (o *GetDeviceInfoOK) SetPayload(payload *models.DeviceInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDeviceInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDeviceInfoUnauthorizedCode is the HTTP code returned for type GetDeviceInfoUnauthorized
const GetDeviceInfoUnauthorizedCode int = 401

/*GetDeviceInfoUnauthorized Access token is missing or invalid

swagger:response getDeviceInfoUnauthorized
*/
type GetDeviceInfoUnauthorized struct {
}

// NewGetDeviceInfoUnauthorized creates GetDeviceInfoUnauthorized with default headers values
func NewGetDeviceInfoUnauthorized() *GetDeviceInfoUnauthorized {

	return &GetDeviceInfoUnauthorized{}
}

// WriteResponse to the client
func (o *GetDeviceInfoUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}
